--- ToolpathGenerator.tsx	2025-04-30 00:00:00.000000000 +0000
+++ ToolpathGenerator.tsx	2025-04-30 00:00:00.000000000 +0000
@@ -16,8 +16,10 @@
 import toast from 'react-hot-toast';
 // Add the import at the top of the file
 import { generateComponentToolpath, generateElementToolpath } from 'src/lib/componentToolpathUtils';
 import { FixedCyclesUIRenderer, isFixedCycle } from 'src/components/cam/FixedCyclesUIRenderer';
 import ToolpathGeneratorIntegration from 'src/components/cam/ToolpathGeneratorIntegration';
+import render3DPrinterSection from 'src/components/cam/render3DPrinterSection';
+import { use3DPrinterSettings } from 'src/components/cam/3DPrinterIntegration';
 import { FixedCycleType } from './toolpathUtils/fixedCycles/fixedCyclesParser';
 import router from 'next/router';
 import { c } from 'framer-motion/dist/types.d-6pKw1mTI';
 
@@ -148,6 +148,15 @@
   // Add this: access the library tools and materials using the hook
   const { tools: userTools, materials: userMaterials } = useLibrary();
   // Use 3D Printer settings hook for consistent state management
 const {
   infillDensity, setInfillDensity,
  infillPattern, setInfillPattern,
   supportType, setSupportType,
   shellCount, setShellCount,
   printResolution, setPrintResolution,
   printOrientation, setPrintOrientation
  } = use3DPrinterSettings();
   
   // Update settings when selected library tool changes
   useEffect(() => {
@@ -572,6 +584,14 @@
         case 'lathe':
           gcode = generateLatheGCode();
           break;
+        // For 3D printer, we'll handle the G-code generation through the render3DPrinterSection component
+        // which will be triggered by the G-code generation button there
+        // But we'll still provide a fallback here if needed
+        case '3dprinter':
+          if (expanded.printer) {
+            setSuccess('Please use the Generate 3D Print G-code button in the 3D Printer Parameters section');
+            setIsGenerating(false);
+            return;
+          }
         case '3dprinter':
           gcode = generate3DPrinterGCode();
           break;
@@ -4184,6 +4204,40 @@
               </div>
             </div>
           )}
+          
+          {/* 3D Printer Section */}
+          {settings.machineType === '3dprinter' && (
+            <>
+              {/* This renders the 3D printer section UI with all necessary props */}
+              {render3DPrinterSection({
+                expanded,
+                toggleSection,
+                settings,
+                updateSettings,
+                infillDensity,
+                setInfillDensity,
+                infillPattern,
+                setInfillPattern,
+                supportType,
+                setSupportType,
+                shellCount,
+                setShellCount,
+                printResolution,
+                setPrintResolution,
+                printOrientation,
+                setPrintOrientation,
+                selectedElement,
+                geometryType,
+                rectangleWidth,
+                rectangleHeight,
+                circleRadius,
+                polygonSides,
+                polygonRadius,
+                // Pass the onGCodeGenerated function to enable the Generate button
+                // in the 3D printer section
+                onGCodeGenerated
+              })}
+            </>
+          )}
 
           {/* Fixed Cycles section */}
           <div className="mb-6">
